version: '3.4'

volumes:
    prometheus_data: {}
    grafana_data: {}

services:
  linkshortener:
    image: ${DOCKER_REGISTRY-}linkshortener
    container_name: LinkShortener.Api
    build:
      context: .
      dockerfile: LinkShortener/Dockerfile
    ports:
        - "5000:5000"
        - "5001:5001"

  linkshortener.db:
    image: postgres:latest
    container_name: linkshortener.db
    environment:
      - POSTGRES_DB=linkshortener
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./.containers/linkshortener-db:/var/lib/postgresql/data
    ports:
      - 5432:5432
    
  linkshortener.cache:
    image: redis:latest
    restart: always
    ports:
      - '6379:6379'
  
  prometheus:
    image: prom/prometheus
    restart: always
    volumes:
        - ./prometheus:/etc/prometheus/
        - prometheus_data:/prometheus
    command:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus'
        - '--web.console.libraries=/usr/share/prometheus/console_libraries'
        - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
        - "9090:9090"
    links:
        - cadvisor:cadvisor
        # - alertmanager:alertmanager
    depends_on:
        - cadvisor

  node-exporter:
    image: prom/node-exporter
    volumes :
        - /proc:/host/proc:ro
        - /sys:/host/sys:ro
        - /:/rootfs:ro
    command:
        - '--path.procfs=/host/proc'
        - '--path.sysfs=/host/sys'
        - '--collector.filesystem.ignored-mount-points'
        - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports :
        - "9100:9100"
    restart: always
    deploy:
        mode: global

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    volumes:
        - /:/rootfs:ro
        - /var/run:/var/run:rw
        - /sys:/sys:ro
        - /var/lib/docker/:/var/lib/docker:ro
    ports :
        - "8080:8080"
    restart: always
    deploy:
        mode: global

  grafana:
    image: grafana/grafana
    user: '472'
    restart: always
    environment :
        GF_INSTALL_PLUGINS: 'grafana-clock-panel,grafana-simple-json-datasource'
    volumes :
        - grafana_data:/var/lib/grafana
        - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
        - ./grafana/config.monitoring
    ports:
        - "3000:3000"
    depends_on:
        - prometheus

  react-frontend:
    build:
      context: C:\Users\SillySharp\source\repos\reactfrontend
      dockerfile: Dockerfile
    image: linkshortener.react
    container_name: linkshortener.react
    ports:
      - "5173:80"
    depends_on: 
        - linkshortener